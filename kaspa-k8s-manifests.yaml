---
# Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kaspad-testnet10-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kaspa-db-testnet10-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# ConfigMap for nginx configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen 80;
        server_name _;

        location /rest/ {
            proxy_pass http://kaspa-rest-server-testnet10-svc:8000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ws/ {
            proxy_pass http://simply-kaspa-socket-server-testnet10-svc:8000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
# Kaspad Testnet 10 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kaspad-testnet10
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kaspad-testnet10
  template:
    metadata:
      labels:
        app: kaspad-testnet10
    spec:
      containers:
      - name: kaspad-testnet10
        image: supertypo/rusty-kaspad:latest
        args:
        - kaspad
        - --yes
        - --nologfiles
        - --disable-upnp
        - --utxoindex
        - --testnet
        - --netsuffix=10
        - --rpclisten=0.0.0.0:16210
        - --rpclisten-borsh=0.0.0.0:17210
        ports:
        - containerPort: 16210
        - containerPort: 16211
        - containerPort: 17210
        volumeMounts:
        - name: kaspad-testnet10-data
          mountPath: /app/data/
      volumes:
      - name: kaspad-testnet10-data
        persistentVolumeClaim:
          claimName: kaspad-testnet10-data-pvc
---
# Kaspad Testnet 10 Service
apiVersion: v1
kind: Service
metadata:
  name: kaspad-testnet10-svc
spec:
  selector:
    app: kaspad-testnet10
  ports:
  - name: rpc
    port: 16210
    targetPort: 16210
  - name: p2p
    port: 16211
    targetPort: 16211
  - name: borsh
    port: 17210
    targetPort: 17210
---
# PostgreSQL Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kaspa-db-testnet10
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kaspa-db-testnet10
  template:
    metadata:
      labels:
        app: kaspa-db-testnet10
    spec:
      containers:
      - name: kaspa-db-testnet10
        image: postgres:16-alpine
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: postgres
        resources:
          limits:
            memory: 4Gi
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: kaspa-db-testnet10-data
          mountPath: /var/lib/postgresql/data/
      volumes:
      - name: kaspa-db-testnet10-data
        persistentVolumeClaim:
          claimName: kaspa-db-testnet10-data-pvc
---
# PostgreSQL Database Service
apiVersion: v1
kind: Service
metadata:
  name: kaspa-db-svc
spec:
  selector:
    app: kaspa-db-testnet10
  ports:
  - port: 5432
    targetPort: 5432
---
# Kaspa REST API Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kaspa-rest-server-testnet10
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kaspa-rest-server-testnet10
  template:
    metadata:
      labels:
        app: kaspa-rest-server-testnet10
    spec:
      containers:
      - name: kaspa-rest-server-testnet10
        image: kaspanet/kaspa-rest-server:latest
        env:
        - name: KASPAD_HOST_1
          value: kaspad-testnet10-svc:16210
        - name: SQL_URI
          value: postgresql+asyncpg://postgres:postgres@kaspa-db-svc:5432/postgres
        - name: CORS_ALLOW_ORIGINS
          value: "*"
        - name: NETWORK_TYPE
          value: testnet
        - name: TESTNET_SUFFIX
          value: "10"
        ports:
        - containerPort: 8000
---
# Kaspa REST API Server Service
apiVersion: v1
kind: Service
metadata:
  name: kaspa-rest-server-testnet10-svc
spec:
  selector:
    app: kaspa-rest-server-testnet10
  ports:
  - port: 8000
    targetPort: 8000
---
# Kaspa WebSocket Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simply-kaspa-socket-server-testnet10
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simply-kaspa-socket-server-testnet10
  template:
    metadata:
      labels:
        app: simply-kaspa-socket-server-testnet10
    spec:
      containers:
      - name: simply-kaspa-socket-server-testnet10
        image: supertypo/simply-kaspa-socket-server:unstable
        args:
        - -x
        - "20"
        - -s
        - ws://kaspad-testnet10-svc:17210
        - --network=testnet-10
        ports:
        - containerPort: 8000
---
# Kaspa WebSocket Server Service
apiVersion: v1
kind: Service
metadata:
  name: simply-kaspa-socket-server-testnet10-svc
spec:
  selector:
    app: simply-kaspa-socket-server-testnet10
  ports:
  - port: 8000
    targetPort: 8000
---
# Kaspa Indexer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simply-kaspa-indexer-testnet10
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simply-kaspa-indexer-testnet10
  template:
    metadata:
      labels:
        app: simply-kaspa-indexer-testnet10
    spec:
      containers:
      - name: simply-kaspa-indexer-testnet10
        image: supertypo/simply-kaspa-indexer:latest
        args:
        - -u
        - -s
        - ws://kaspad-testnet10-svc:17210
        - -d
        - postgresql://postgres:postgres@kaspa-db-svc:5432/postgres
        - --network=testnet-10
---
# API Bridge (Nginx) Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-bridge
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-bridge
  template:
    metadata:
      labels:
        app: api-bridge
    spec:
      containers:
      - name: api-bridge
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
# API Bridge Service
apiVersion: v1
kind: Service
metadata:
  name: api-bridge-svc
spec:
  selector:
    app: api-bridge
  ports:
  - port: 80
    targetPort: 80
---
# LoadBalancer for API Bridge (for external access)
apiVersion: v1
kind: Service
metadata:
  name: api-bridge-lb
spec:
  type: LoadBalancer
  selector:
    app: api-bridge
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 8000
    targetPort: 8000
    name: rest-api
  - port: 8001
    targetPort: 8000
    name: websocket